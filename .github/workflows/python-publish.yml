name: Upload Python Package to PyPi

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Match tags starting with 'v'
      - '!v*-docs.*' # Exclude tags ending with "-docs.<number>"

jobs:
  build-and-publish:
    name: Build distribution
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is crucial for requesting the OIDC token
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Replace with your desired Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine --user

      - name: Build the package
        run: |
          python -m build

      - name: Publish Python package to PyPI
        run: |
          twine upload dist/*
          echo "Successfully published to PyPI"
        env:
          TWINE_TOKEN: ${{ secrets.PYPI_TOKEN }}

# Another way to implement this workflow:
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/